{"ast":null,"code":"var _jsxFileName = \"/Users/jingwen/Documents/full_stack/lab2/covid_map/src/components/map/Map.js\";\nimport React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport CountyCard from '../card/CountyCard';\nimport { MapService } from '../../service/MapService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnyReactComponent = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 45\n  }, this);\n};\n\n_c = AnyReactComponent;\n\nclass Map extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      boundary: {},\n      zoomLevel: 12,\n      points: {} //fetched covid data\n\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // Important! Always set the container height explicitly\n      // {} to call javascript\n      _jsxDEV(\"div\", {\n        style: {\n          height: '100vh',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n          bootstrapURLKeys: {\n            key: 'AIzaSyCkRg8a0XvAbNSFM3xJILFbeVCx9q9dEBE'\n          },\n          defaultCenter: this.props.center,\n          defaultZoom: this.props.zoom,\n          yesIWantToUseGoogleMapApiInternals: true,\n          onGoogleApiLoaded: _ref2 => {// 1.call api to get data\n            // 2.data handling\n            // 3.set state to trigger updating\n\n            let {\n              map,\n              maps\n            } = _ref2;\n          },\n          onChange: changeObject => {\n            this.setState({\n              boundary: changeObject.bounds,\n              zoomLevel: changeObject.zoom\n            });\n          } //change event value\n          ,\n          children: this.renderPoints()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n  renderPoints() {\n    return /*#__PURE__*/_jsxDEV(AnyReactComponent, {\n      lat: 38.9072 //string and true dont need {}\n      ,\n      lng: -77.0369,\n      children: /*#__PURE__*/_jsxDEV(CountyCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nMap.defaultProps = {\n  center: {\n    lat: 38.9072,\n    lng: -77.0369\n  },\n  zoom: 12 //from 1 (whole earth) to 20\n\n};\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnyReactComponent\");","map":{"version":3,"sources":["/Users/jingwen/Documents/full_stack/lab2/covid_map/src/components/map/Map.js"],"names":["React","Component","GoogleMapReact","CountyCard","MapService","AnyReactComponent","children","Map","state","boundary","zoomLevel","points","render","height","width","key","props","center","zoom","map","maps","changeObject","setState","bounds","renderPoints","defaultProps","lat","lng"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAEA,MAAMC,iBAAiB,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBAAkB;AAAA,cAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,UAAlB;AAAA,CAA1B;;KAAMD,iB;;AAEN,MAAME,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAW1BO,KAX0B,GAWlB;AACJC,MAAAA,QAAQ,EAAC,EADL;AAEJC,MAAAA,SAAS,EAAC,EAFN;AAGJC,MAAAA,MAAM,EAAC,EAHH,CAGO;;AAHP,KAXkB;AAAA;;AAiB1BC,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AACA;AACA;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SAAZ;AAAA,+BACE,QAAC,cAAD;AACE,UAAA,gBAAgB,EAAE;AAACC,YAAAA,GAAG,EAAC;AAAL,WADpB;AAEE,UAAA,aAAa,EAAE,KAAKC,KAAL,CAAWC,MAF5B;AAGE,UAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,IAH1B;AAIE,UAAA,kCAAkC,MAJpC;AAKE,UAAA,iBAAiB,EAAE,SAAmB,CAClC;AAEA;AAEA;;AALkC,gBAAlB;AAAEC,cAAAA,GAAF;AAAOC,cAAAA;AAAP,aAAkB;AAMrC,WAXH;AAYE,UAAA,QAAQ,EAAGC,YAAD,IAAgB;AACtB,iBAAKC,QAAL,CAAc;AACVb,cAAAA,QAAQ,EAAEY,YAAY,CAACE,MADb;AAEVb,cAAAA,SAAS,EAAEW,YAAY,CAACH;AAFd,aAAd;AAIH,WAjBH,CAiBK;AAjBL;AAAA,oBAmBK,KAAKM,YAAL;AAnBL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF;AA2BD;;AACDA,EAAAA,YAAY,GAAG;AACX,wBACE,QAAC,iBAAD;AACA,MAAA,GAAG,EAAI,OADP,CACgB;AADhB;AAEA,MAAA,GAAG,EAAI,CAAC,OAFR;AAAA,6BAII,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF;AAQH;;AAvDyB;;AAAtBjB,G,CAGGkB,Y,GAAe;AACpBR,EAAAA,MAAM,EAAE;AACNS,IAAAA,GAAG,EAAE,OADC;AAENC,IAAAA,GAAG,EAAE,CAAC;AAFA,GADY;AAKpBT,EAAAA,IAAI,EAAE,EALc,CAKX;;AALW,C;AAuDxB,eAAeX,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport CountyCard from '../card/CountyCard';\nimport { MapService } from '../../service/MapService';\n\nconst AnyReactComponent = ({ children }) => <div>{children}</div>;\n\nclass Map extends Component {\n    //props 不一定叫 props 也可以识别\n    //state 一定得叫states\n  static defaultProps = {\n    center: {\n      lat: 38.9072,\n      lng: -77.0369,\n    },\n    zoom: 12 //from 1 (whole earth) to 20\n  };\n\n  state = {\n      boundary:{},\n      zoomLevel:12,\n      points:{}, //fetched covid data\n  };\n\n  render() {\n    return (\n      // Important! Always set the container height explicitly\n      // {} to call javascript\n      <div style={{ height: '100vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{key:'AIzaSyCkRg8a0XvAbNSFM3xJILFbeVCx9q9dEBE'}}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => {\n              // 1.call api to get data\n\n              // 2.data handling\n\n              // 3.set state to trigger updating\n          }}\n          onChange={(changeObject)=>{\n              this.setState({\n                  boundary: changeObject.bounds,\n                  zoomLevel: changeObject.zoom,\n              });\n          }} //change event value\n        >\n            {this.renderPoints()} \n        </GoogleMapReact>\n      </div>\n    );\n  }\n  renderPoints() {\n      return (\n        <AnyReactComponent\n        lat = {38.9072} //string and true dont need {}\n        lng = {-77.0369}\n        >\n            <CountyCard />\n        </AnyReactComponent>\n      );\n  }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}